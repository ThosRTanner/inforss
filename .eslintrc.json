{
    "extends": "eslint:all",

    "env": {
        "browser": true,
        "es6": true
    },

    "rules": {
        // Then we need to cut down / configure the rules we don't like
        // override default options

        //Don't allow dangling commas in lists &c
        "comma-dangle": [ "error", "always" ],

        //2 space indents
        "indent": [ "error", 2 ],

        //"no-cond-assign": [ "error", "always" ],

        // One declaration per statement
        "one-var": [ "error", { "var": "never", "let": "never", "const": "never" } ],

        //"init-declarations": "off",
        //"no-console": "off",

        //------------------------------------------------------------------
        //These should eventually be enabled

        //Conflicts with the way you set up modules and also not sure how to
        //deal with constructors.
        "no-implicit-globals": "off",

        //Disallows magic numbers, which we should probably do, but there's
        //a fair bit of +=1 and index into argument arrays
        "no-magic-numbers": "off",

        //------------------------------------------------------------------
        // disable

        //This triggers on anything that looks like an fs call. Things
        //other than filing systems have exists and open methods.
        //In any case, calculating a filename is not unusual.
        "detect-non-literal-fs-filename": "off",

        //I like inline comments
        "no-inline-comments": "off",

        // camelcase is evil. Allow underscores
        "camelcase": "off",

        //Allow == and !=
        "eqeqeq": "off",

        //Allow 'use strict' at the global scope. This is all for
        //firefox type modules anyway (when I work out how to make
        //them es6 modules, this can go
        "strict": "off",

        //Don't require newlines before/after function parens
        "function-paren-newline": "off"
    },

    //Firefox magic
    "globals": {
        "Components": false
    }
}
